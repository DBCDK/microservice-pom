<!--
  ~ Copyright Dansk Bibliotekscenter a/s. Licensed under GPLv3
  ~ See license text in LICENSE.txt or at https://opensource.dbc.dk/licenses/gpl-3.0/
  -->
<project>
  <modelVersion>4.0.0</modelVersion>

  <!-- Basic information about this module -->
  <groupId>dk.dbc</groupId>
  <artifactId>microservice-pom</artifactId>
  <version>master-SNAPSHOT</version>
  <packaging>pom</packaging>

  <parent>
    <groupId>dk.dbc</groupId>
    <artifactId>super-pom</artifactId>
    <version>master-SNAPSHOT</version>
    <relativePath></relativePath>
  </parent>

  <properties>
    <eclipselink.version>2.7.6</eclipselink.version>
    <flyway.version>6.5.5</flyway.version>
    <hamcrest.version>2.2</hamcrest.version>
    <hazelcast.version>3.12.6</hazelcast.version>
    <jackson.version>2.10.2</jackson.version>
    <javaee.version>8.0</javaee.version>
    <jakartaee.version>8.0.0</jakartaee.version>
    <jersey.version>2.30</jersey.version>
    <junit4.version>4.13</junit4.version>
    <junit5.version>5.6.2</junit5.version>
    <logback.version>1.2.3</logback.version>
    <microprofile.version>3.3</microprofile.version>
    <mockito.version>3.3.3</mockito.version>
    <payara.version>5.21</payara.version>
    <payara.major.minor.version>5.21.2</payara.major.minor.version>
    <postgresql-driver.version>42.2.16</postgresql-driver.version>
    <slf4j.version>1.7.30</slf4j.version>
    <snakeyaml.version>1.25</snakeyaml.version>
    <spotbugs.plugin.version>4.0.4</spotbugs.plugin.version>
    <spotbugs.annotations.version>4.1.2</spotbugs.annotations.version>
    <otj-pg-embedded.version>0.13.3</otj-pg-embedded.version>
    <testcontainers.version>1.14.3</testcontainers.version>
  </properties>

  <dependencyManagement>
    <dependencies>
      <!--  Version control for your database -->
      <dependency>
        <groupId>org.flywaydb</groupId>
        <artifactId>flyway-core</artifactId>
        <version>${flyway.version}</version>
      </dependency>

      <!-- Jackson is a high-performance JSON processor (parser, generator) -->
      <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-core</artifactId>
        <version>${jackson.version}</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-annotations</artifactId>
        <version>${jackson.version}</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-databind</artifactId>
        <version>${jackson.version}</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.jackson.module</groupId>
        <artifactId>jackson-module-jaxb-annotations</artifactId>
        <version>${jackson.version}</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.jackson.dataformat</groupId>
        <artifactId>jackson-dataformat-xml</artifactId>
        <version>${jackson.version}</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.jackson.dataformat</groupId>
        <artifactId>jackson-dataformat-yaml</artifactId>
        <version>${jackson.version}</version>
        <scope>provided</scope>
      </dependency>

      <dependency>
        <groupId>javax</groupId>
        <artifactId>javaee-api</artifactId>
        <version>${javaee.version}</version>
        <scope>provided</scope>
      </dependency>

      <dependency>
        <groupId>jakarta.platform</groupId>
        <artifactId>jakarta.jakartaee-api</artifactId>
        <version>${jakartaee.version}</version>
        <scope>provided</scope>
      </dependency>

      <dependency>
        <groupId>javax</groupId>
        <artifactId>javaee-web-api</artifactId>
        <version>${javaee.version}</version>
        <scope>provided</scope>
      </dependency>

      <dependency>
        <groupId>jakarta.platform</groupId>
        <artifactId>jakarta.jakartaee-web-api</artifactId>
        <version>${jakartaee.version}</version>
        <scope>provided</scope>
      </dependency>

      <dependency>
        <groupId>com.hazelcast</groupId>
        <artifactId>hazelcast</artifactId>
        <version>${hazelcast.version}</version>
        <scope>provided</scope>
      </dependency>

      <!-- Jersey is the JAX-RS reference implementation -->
      <dependency>
        <groupId>org.glassfish.jersey</groupId>
        <artifactId>jersey-bom</artifactId>
        <version>${jersey.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <dependency>
        <groupId>org.glassfish.jersey.media</groupId>
        <artifactId>jersey-media-json-jackson</artifactId>
        <version>${jersey.version}</version>
        <scope>provided</scope>
      </dependency>

      <!-- Baseline platform definition that optimizes Enterprise Java for a microservices architecture -->
      <dependency>
        <groupId>org.eclipse.microprofile</groupId>
        <artifactId>microprofile</artifactId>
        <type>pom</type>
        <version>${microprofile.version}</version>
        <scope>provided</scope>
      </dependency>

      <dependency>
        <groupId>org.eclipse.persistence</groupId>
        <artifactId>eclipselink</artifactId>
        <version>${eclipselink.version}</version>
        <scope>provided</scope>
      </dependency>

      <!-- v4 of framework of the xUnit architecture for unit testing frameworks -->
      <dependency>
        <groupId>junit</groupId>
        <artifactId>junit</artifactId>
        <version>${junit4.version}</version>
        <scope>test</scope>
      </dependency>

      <!-- v5 of framework of the xUnit architecture for unit testing frameworks -->
      <dependency>
        <groupId>org.junit</groupId>
        <artifactId>junit-bom</artifactId>
        <type>import</type>
        <version>${junit5.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.junit.jupiter</groupId>
        <artifactId>junit-jupiter-api</artifactId>
        <version>${junit5.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.junit.jupiter</groupId>
        <artifactId>junit-jupiter-engine</artifactId>
        <version>${junit5.version}</version>
        <scope>test</scope>
      </dependency>

      <!-- Unit test matchers that can be combined to create flexible expressions of intent -->
      <dependency>
        <groupId>org.hamcrest</groupId>
        <artifactId>hamcrest</artifactId>
        <version>${hamcrest.version}</version>
        <scope>test</scope>
      </dependency>

      <!-- old deprecated artifacts -->
      <dependency>
        <groupId>org.hamcrest</groupId>
        <artifactId>hamcrest-core</artifactId>
        <version>1.3</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.hamcrest</groupId>
        <artifactId>hamcrest-all</artifactId>
        <version>1.3</version>
        <scope>test</scope>
      </dependency>

      <!-- test containers -->
      <dependency>
          <groupId>org.testcontainers</groupId>
          <artifactId>junit-jupiter</artifactId>
          <version>${testcontainers.version}</version>
          <scope>test</scope>
      </dependency>

      <dependency>
          <groupId>org.testcontainers</groupId>
          <artifactId>postgresql</artifactId>
          <version>${testcontainers.version}</version>
          <scope>test</scope>
      </dependency>

      <!-- Embeded pg tester -->
      <dependency>
        <groupId>com.opentable.components</groupId>
        <artifactId>otj-pg-embedded</artifactId>
        <version>${otj-pg-embedded.version}</version>
        <scope>test</scope>
      </dependency>

      <!-- Mocking framework for unit tests -->
      <dependency>
        <groupId>org.mockito</groupId>
        <artifactId>mockito-core</artifactId>
        <version>${mockito.version}</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>org.postgresql</groupId>
        <artifactId>postgresql</artifactId>
        <version>${postgresql-driver.version}</version>
        <scope>provided</scope>
      </dependency>

      <!-- logging -->
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
        <version>${slf4j.version}</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-ext</artifactId>
        <version>${slf4j.version}</version>
      </dependency>
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-simple</artifactId>
        <version>${slf4j.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>ch.qos.logback</groupId>
        <artifactId>logback-classic</artifactId>
        <version>${logback.version}</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>ch.qos.logback</groupId>
        <artifactId>logback-core</artifactId>
        <version>${logback.version}</version>
        <scope>provided</scope>
      </dependency>

      <!-- SnakeYAML is required for the YAML conversion in Jackson -->
      <dependency>
        <groupId>org.yaml</groupId>
        <artifactId>snakeyaml</artifactId>
        <version>${snakeyaml.version}</version>
      </dependency>

      <dependency>
        <groupId>com.github.spotbugs</groupId>
        <artifactId>spotbugs-annotations</artifactId>
        <version>${spotbugs.annotations.version}</version>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-war-plugin</artifactId>
          <version>3.2.2</version>
          <configuration>
            <webResources>
              <resource>
                <directory>${basedir}/src/main/webapp/WEB-INF</directory>
                <filtering>true</filtering>
                <targetPath>WEB-INF</targetPath>
              </resource>
            </webResources>
            <archive>
              <manifest>
                <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
              </manifest>
              <manifestEntries>
                <Implementation-Build>${git.commit.id}</Implementation-Build>
              </manifestEntries>
            </archive>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.22.2</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-ejb-plugin</artifactId>
          <version>3.0.1</version>
          <configuration>
            <ejbVersion>3.2</ejbVersion>
          </configuration>
        </plugin>
        <plugin>
          <artifactId>maven-resources-plugin</artifactId>
          <version>3.1.0</version>
          <executions>
            <execution>
              <id>process-docker-resources</id>
              <phase>process-resources</phase>
              <goals>
                <goal>copy-resources</goal>
              </goals>
              <configuration>
                <outputDirectory>${project.build.directory}/docker</outputDirectory>
                <resources>
                  <resource>
                    <directory>${basedir}/src/main/docker</directory>
                    <filtering>true</filtering>
                  </resource>
                </resources>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>com.github.spotbugs</groupId>
          <artifactId>spotbugs-maven-plugin</artifactId>
          <version>${spotbugs.plugin.version}</version>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>
</project>
